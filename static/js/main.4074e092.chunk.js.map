{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","Searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","console","log","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOAgBeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACQ,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAKH,IACrD,sBAAKC,UAAU,GAAf,UACI,6BAAKH,IACL,4BAAIC,WCUTK,EAjBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACf,OACC,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GACT,OACG,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCQdC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAW,MAAhB,SACE,uBACMA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCDZI,EAPC,SAACC,GACb,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAkBC,OAAO,SAAlE,SACSJ,EAAMK,YCmBRC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAEdC,QAAQC,IAAIV,GALE,E,8DAQAW,EAAOC,GACrBC,KAAKC,SAAS,CAACN,UAAW,M,+BAI1B,OAAIK,KAAKN,MAAMC,SACJ,0DAEJK,KAAKb,MAAMK,a,GAjBEU,aCyCbC,G,wDAnCX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,SAACC,GACV,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAX9C,EAAKd,MAAQ,CACTlB,OAAQ,GACR8B,YAAa,IAJR,E,gEAOO,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEzB,OAASqC,S,+BAKjC,IAAD,EACwBb,KAAKN,MAA5BlB,EADD,EACCA,OAAQ8B,EADT,EACSA,YACTQ,EAAiBtC,EAAOuC,QAAO,SAAAC,GACjC,OAAOA,EAAM/C,KAAKgD,cAAcC,SAASZ,EAAYW,kBAEzD,OAASzC,EAAO2C,OAGZ,sBAAK/C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACD,cAAC,EAAD,CAAWU,aAAckB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACK,cAAC,EAAD,CAAU5B,OAAQsC,WAP1B,6C,GAtBKZ,cCKHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.4074e092.chunk.js","sourcesContent":["import React from 'react'; //Need to import to understand we using jsx\r\n\r\n\r\nconst Card = ({name, email, id}) =>{\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img src={`https://robohash.org/${id}?200x200`} alt={id}></img>\r\n                <div className=''>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js'\r\nconst CardList = ({robots}) =>{ //Pure Components => return one thing not affect \r\n    return (\r\n     <div>           \r\n        {\r\n        robots.map((user, i) =>{\r\n                 return(\r\n                    <Card\r\n                        key={i} \r\n                        id={robots[i].id}\r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                  />\r\n                 );  \r\n                }) \r\n    }       \r\n    </div>\r\n                            );}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({Searchfield, searchChange}) => {\r\n    return (\r\n        <div className= 'pa2'>    \r\n          <input \r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange ={searchChange}>\r\n               \r\n         </input>\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll =  (props) =>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'5px solid black',height:'800px'}}>\r\n                {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n        console.log(props)\r\n    }\r\n    \r\n    componentDidCatch(error, info){\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }   \r\n}\r\n\r\nexport default ErrorBoundary;","import {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport './App.css'\r\n//State an Object the describes the application in which change (re-render conponents)\r\nclass App extends Component { //this is smart components as it has state also has class\r\n    constructor(){\r\n        super()//Call the constructor of components\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots : users })\r\n    )};\r\n    onSearchChange = (event) =>{\r\n            this.setState({ searchfield: event.target.value})\r\n        }\r\n    render () {\r\n        const {robots, searchfield} = this.state\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return (!robots.length)?\r\n             <h1>Loading</h1> :\r\n             (\r\n            <div className='tc'>\r\n             <h1 className='f2'>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                     <CardList robots={filteredRobots}/> \r\n                </ErrorBoundary>\r\n            </Scroll>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport 'tachyons';\nimport {robots} from './robots'//need to destructure to grab individual things\nimport reportWebVitals from './reportWebVitals'\nReactDOM.render(<App/>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}